program Test begin x := 10 end 
program H3llo12 begin vAr3 := 5 end 
program H3llo12 begin vAr3 := oth3rVar end 
program H3llo12 begin vAr3 := 5 * 4 + 3 end 
program H3llo12 begin vAr3 := 5 + 4 + 3 end 
program H3llo12 begin vAr3 := 5 * 4 * 5 end 
program H3llo12 begin vAr3 := ( - 5 ) end 
program H3llo12 begin vAr3 := ( - 5 + 7 ) end 
program H3llo12 begin vAr3 := ( - 5 + 7 ) / 8 end 
program H3llo12 begin vAr3 := ( - 5 + otherVar ) * 8 end 
program H3llo12 begin vAr3 := ( - 5 + otherVar ) * ( + 3 ) end 
program H3llo12 begin vAr3 := ( - 5 + 7 ) ; otherVar := 2 * 7 end 
program H3llo12 begin vAr3 := ( - 5 + 7 ) ; otherVar := 2 * 7 end 
program H3llo12 begin vAr3 := ( - 5 + 7 ) ; otherVar := 2 * 7 ; lastVar := 100 * ( - 6 + 4 ) end 
program H3llo12 begin vAr3 := 5 <= 3 end 
program H3llo12 begin vAr3 := 5 <= 3 ; testVar := 2 < 3 end 
program H3llo12 begin read ( var1 ) end 
program H3llo12 begin read ( vAr1 , var2 , var3 , var4 ) end 
program H3llo12 begin write ( 5 ) end 
program H3llo12 begin write ( - 5 ) end 
program H3llo12 begin write ( 5 * 7 ) end 
program H3llo12 begin write ( 5 <= var5 ) end 
program H3llo12 begin write ( 5 = var5 ) end 
program H3llo12 begin write ( 5 * 7 + 8 <= 8 / ( 3 / 4 ) ) end 
program Test begin write ( 5 * 7 + 8 <= 8 / ( 3 / 4 ) , 3 < 2 , 8 ) end 
program H3llo12 begin vAr3 := 5 * 4 + 3 ; read ( vAr1 , var2 , var3 , var4 ) ; write ( 5 * 7 + 8 <= 8 / ( 3 / 4 ) ) end 
program Test begin begin x := 10 end end 
program Progname begin begin var := 1 end ; var := 1 end 
program Test begin begin begin x := 10 end end end 
program Test begin y := 5 * 7 ; begin x := 10 end end 
program Test begin y := 5 * 7 ; begin x := 10 ; read ( y ) end ; write ( 7 < 4 ) end 
program Test begin y := 5 * 7 ; begin x := 10 end ; write ( 7 < 4 ) end 
program Test begin if 5 < 3 then x := 4 end 
program Test begin if 5 < 3 then x := 4 else y := otherVar end 
program Test begin if 5 < ( 3 >= 2 ) then begin read ( var1 , var2 ) ; write ( - 5 ) end else if 3 < var3 then write ( 3 / 4 ) end 
program Test begin while 5 < 2 do x := 3 end 
program Test begin while + 5 + 4 / 3 do begin if - 3 + ( 4 * 3 ) then x := 82 end ; th1ng := 45 end 
program Test begin while 6 * 4 / 3 + 2 <= - 24 do if 5 < ( 3 >= 2 ) then begin read ( var1 , var2 ) ; write ( - 5 ) end else if 3 < var3 then write ( 3 / 4 ) end 
program Thing begin x := 5 * var1 / ( y + 3 ) ; begin if x > 2 then x := 2 end end 
program Thing begin if 5 < 3 then while 5 < 3 do x := 3 else x := 2 end 